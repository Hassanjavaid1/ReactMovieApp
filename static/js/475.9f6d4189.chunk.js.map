{"version":3,"file":"static/js/475.9f6d4189.chunk.js","mappings":"+RASe,SAASA,EAASC,GAAmB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAfC,EAAWjB,EAAXiB,YAC1BC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAkDL,EAAAA,EAAAA,UAChD,iCACDM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFME,EAAiBD,EAAA,GAGxBE,GAH8CF,EAAA,IAGON,EAAAA,EAAAA,UACnD,gCACDS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAFME,EAAqBD,EAAA,GAGtBE,GAH2CF,EAAA,GAG9B,eAAAG,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC8B,OAA9CL,EAAG,sCAAAM,OAAyC1B,EAAE,6DAAAuB,EAAAE,KAAA,GACjCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAA3BC,EAAIE,EAAAK,KACRrB,EAAcc,EAAKQ,SAAS,wBAAAN,EAAAO,OAAA,GAAAX,EAAA,KAC7B,kBAJkB,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,MAKbC,EAAc,eAAAC,GAAAlB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,IAAA,IAAAf,EAAA,OAAAH,EAAAA,EAAAA,KAAAK,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACgC,OAA/CL,EAAG,GAAAM,OAAMW,EAAAA,GAAQ,WAAAX,OAAU1B,EAAE,YAAA0B,OAAWY,EAAAA,IAAOF,EAAAX,KAAA,GAClCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAAvBgB,EAAAR,KAAA,wBAAAQ,EAAAN,OAAA,GAAAK,EAAA,KACX,kBAHmB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,MAIpBO,EAAAA,EAAAA,YAAU,WACRzB,IACAmB,GACF,GAAG,IACH,IAAMO,EAAY,CAAC,eACbC,EAAsB,OAAX1C,QAAW,IAAXA,GAAmB,QAARhB,EAAXgB,EAAa2C,cAAM,IAAA3D,GAAY,QAAZC,EAAnBD,EAAqB8C,QAAQ,UAAE,IAAA7C,OAApB,EAAXA,EAAiC2D,IAC5CC,EAAkB,OAAX7C,QAAW,IAAXA,GAAmB,QAARd,EAAXc,EAAa2C,cAAM,IAAAzD,GAAY,QAAZC,EAAnBD,EAAqB4C,QAAQ,UAAE,IAAA3C,OAApB,EAAXA,EAAiC0D,KAAKC,MAAM,EAAG,IAEtDC,EAAuB,OAAX/C,QAAW,IAAXA,GAAmB,QAARZ,EAAXY,EAAa2C,cAAM,IAAAvD,GAAY,QAAZC,EAAnBD,EAAqB0C,QAAQ,UAAE,IAAAzC,OAApB,EAAXA,EAAiCuD,IAC7CI,EAAmB,OAAXhD,QAAW,IAAXA,GAAmB,QAARV,EAAXU,EAAa2C,cAAM,IAAArD,GAAY,QAAZC,EAAnBD,EAAqBwC,QAAQ,UAAE,IAAAvC,OAApB,EAAXA,EAAiCsD,KAAKC,MAAM,EAAG,IACvDG,EAAuB,OAAXjD,QAAW,IAAXA,GAAmB,QAARR,EAAXQ,EAAa2C,cAAM,IAAAnD,GAAY,QAAZC,EAAnBD,EAAqBsC,QAAQ,UAAE,IAAArC,OAApB,EAAXA,EAAiCmD,IAC7CM,EAAmB,OAAXlD,QAAW,IAAXA,GAAmB,QAARN,EAAXM,EAAa2C,cAAM,IAAAjD,GAAY,QAAZC,EAAnBD,EAAqBoC,QAAQ,UAAE,IAAAnC,OAApB,EAAXA,EAAiCkD,KAAKC,MAAM,EAAG,IACvDK,EAAuB,OAAXnD,QAAW,IAAXA,GAAmB,QAARJ,EAAXI,EAAa2C,cAAM,IAAA/C,GAAY,QAAZC,EAAnBD,EAAqBkC,QAAQ,UAAE,IAAAjC,OAApB,EAAXA,EAAiC+C,IAC7CQ,EAAmB,OAAXpD,QAAW,IAAXA,GAAmB,QAARF,EAAXE,EAAa2C,cAAM,IAAA7C,GAAY,QAAZC,EAAnBD,EAAqBgC,QAAQ,UAAE,IAAA/B,OAApB,EAAXA,EAAiC8C,KAAKC,MAAM,EAAG,IAM7D,MAJmB,KAAfvC,GAAmC,MAAdA,GACvB8C,QAAQC,IAAI,yBAIZC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKtD,GAAG,iBAAgBwD,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,sBAAqBwD,SAAC,2BAC7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,SACxB,KAAbf,GAA+B,MAAZA,GAClBgB,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,kBAAiBwD,SAAE9C,KAE1B4C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,CAC5BhB,EAAUmB,KAAI,SAACC,GAAK,OACnBH,EAAAA,EAAAA,KAAA,UAEEC,UAAU,sBACVG,IAAG,iCAAAnC,OAAmCe,EAAQ,sDAC9CqB,MAAM,yBACNC,YAAY,IACZC,MAAM,kBACNC,IAAI,IACJC,iBAAe,GAPVN,EAQG,KAEZH,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,aAAYwD,SAAEZ,EAAO,YAE9Ba,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,UACtCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,CAC5BhB,EAAUmB,KAAI,SAACQ,GAAM,OACpBV,EAAAA,EAAAA,KAAA,UAEEC,UAAU,sBACVG,IAAG,iCAAAnC,OAAmCoB,EAAS,0BAC/CgB,MAAK,gBACLC,YAAY,IACZC,MAAM,kBACNE,iBAAe,GANVC,EAOG,KAEZV,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,aAAYwD,SAAET,EAAQ,cAGjCU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,UACtCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,CAC5BhB,EAAUmB,KAAI,SAACS,GAAM,OACpBX,EAAAA,EAAAA,KAAA,UAEEC,UAAU,sBACVG,IAAG,iCAAAnC,OAAmCsB,EAAS,0BAC/Cc,MAAK,gBACLC,YAAY,IACZC,MAAM,kBACNE,iBAAe,GANVE,EAOG,KAEZX,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,aAAYwD,SAAEP,EAAQ,cAGjCQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,UACtCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iBAAgBF,SAAA,CAC5BhB,EAAUmB,KAAI,SAACU,GAAM,OACpBZ,EAAAA,EAAAA,KAAA,UAEEC,UAAU,sBACVG,IAAG,iCAAAnC,OAAmCwB,EAAS,0BAC/CY,MAAK,gBACLC,YAAY,IACZC,MAAM,4BACNE,iBAAe,EACfI,MAAM,MACNC,OAAO,OARFF,EASG,KAGZZ,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,aAAYwD,SAAEL,EAAQ,sBAOzCG,EAAAA,EAAAA,MAAA,OAAKtD,GAAG,cAAawD,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASF,SAAC,wBACxBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,SAC3BlD,EAAWqD,KAAI,SAAAa,GAAA,IAAExE,EAAEwE,EAAFxE,GAAGyE,EAAWD,EAAXC,YAAYX,EAAKU,EAALV,MAAMY,EAAYF,EAAZE,aAAaC,EAAYH,EAAZG,aAAY,OAC1DlB,EAAAA,EAAAA,KAAA,OAAKzD,GAAG,sBAAqBwD,SACX,KAAflD,GACa,MAAdA,QACesE,IAAftE,EACEO,GAEAyC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACoB,EAAAA,GAAI,CAACC,GAAE,gBAAApD,OAAkB1B,GAAKwD,UAC7BC,EAAAA,EAAAA,KAAA,OACEC,UAAU,iBACVG,IACiB,MAAfY,QACgBG,IAAhBH,GACgB,KAAhBA,EACIM,EACAC,EAAAA,GAAUP,EAEhBQ,IAAI,QAGRxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYF,UACzBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYF,SACvB0B,OAAOpB,GAAOjB,MAAM,EAAG,IAAM,WAGlCS,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAC/BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KACEC,UAAU,4BACVyB,MAAO,CAAEC,MAAO,aAEhBV,EAAaW,QAAQ,OAEzB5B,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBF,SAChC8B,SAASX,YAKd,WAOpB,C,gBCpKe,SAASY,IAAe,IAADC,EAAAC,EAAAC,EACpCxF,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CH,EAAWK,EAAA,GAAEuF,EAAcvF,EAAA,GAClCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CoF,EAAYnF,EAAA,GAAEoF,EAAepF,EAAA,GACpCE,GAAsDR,EAAAA,EAAAA,UAAS,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA3DmF,EAAmBlF,EAAA,GAAEmF,EAAsBnF,EAAA,GAClDoF,GAAsC7F,EAAAA,EAAAA,WAAS,GAAM8F,GAAA5F,EAAAA,EAAAA,GAAA2F,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgDjG,EAAAA,EAAAA,WAAS,GAAMkG,GAAAhG,EAAAA,EAAAA,GAAA+F,EAAA,GAAtCE,GAAFD,EAAA,GAAqBA,EAAA,IACpCrG,GAAOC,EAAAA,EAAAA,MAAPD,GACFuG,EAAc,eAAAzH,GAAAkC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC6B,OAA9CL,EAAG,sCAAAM,OAAyC1B,EAAE,kGAAAuB,EAAAE,KAAA,GACjCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAA3BC,EAAIE,EAAAK,KACR+D,EAAetE,GAAM,wBAAAE,EAAAO,OAAA,GAAAX,EAAA,KACtB,kBAJmB,OAAArC,EAAAiD,MAAA,KAAAC,UAAA,KAMdwE,EAAe,eAAAzF,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiB,IAAA,IAAAf,EAAAC,EAAAoF,EAAA,OAAAxF,EAAAA,EAAAA,KAAAK,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAC+B,OAA/CL,EAAG,GAAAM,OAAMW,EAAAA,GAAQ,WAAAX,OAAU1B,EAAE,YAAA0B,OAAWY,EAAAA,IAAOF,EAAAX,KAAA,GAClCE,EAAAA,EAAAA,IAAUP,GAAK,KAAD,EAA3BC,EAAIe,EAAAR,MAEJ6E,EAAkBpF,EAAKQ,QAAQ6E,MACnC,SAACC,GAAK,MAAoB,YAAfA,EAAMC,IAAkB,KAGnCf,EAAgBY,EAAgB9D,KAEhCoD,EAAuB,yCACxB,wBAAA3D,EAAAN,OAAA,GAAAK,EAAA,KACF,kBAZoB,OAAApB,EAAAgB,MAAA,KAAAC,UAAA,MAsBrBO,EAAAA,EAAAA,YAAU,WACRgE,GACF,GAAG,IAGH,IAUMM,EAASC,OAAO/G,EAAY2E,cAClC,OACEjB,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,eAAcF,UAC/BF,EAAAA,EAAAA,MAAA,OACEI,UAAU,mBACVyB,MAAO,CACL4B,gBAAgB,OAADrF,OATJ,kCAS4B3B,EAAYiH,cAAa,MAChExD,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,MAAA,UAAQtD,GAAG,sBAAqBwD,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEI,IAAKmB,EAAAA,GAAUjF,EAAY0E,YAC3Bf,UAAU,qBACVuB,IAAKlF,EAAY+D,SAEnBR,EAAAA,EAAAA,MAAA,OAAKI,UAAU,eAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASF,SAAEzD,EAAY+D,SACrCR,EAAAA,EAAAA,MAAA,OAAKI,UAAU,cAAaF,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,cAAaF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,KACEC,UAAU,4BACVyB,MAAO,CAAEC,MAAO,UAAW6B,QAAS,YAErCJ,EAAOxB,QAAQ,OAElB/B,EAAAA,EAAAA,MAAA,QAAMI,UAAU,eAAcF,SAAA,CAAEzD,EAAYmH,QAAQ,QACpDzD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2BAA0BF,SACvC8B,SAASvF,EAAY4E,mBAGP,QADba,EACLzF,EAAYoH,cAAM,IAAA3B,OAAA,EAAlBA,EAAoB7B,KAAI,SAAAzB,GAAA,IAAGU,EAAIV,EAAJU,KAAI,OAC9Ba,EAAAA,EAAAA,KAAA,QAAMzD,GAAG,eAAcwD,SAAEZ,EAAO,KAAW,KAE7Ca,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,iBAAgBwD,SAAC,cACxBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBF,SAC3B0B,OAAOnF,EAAYqH,UAAUvE,MAAM,EAAG,QAEzCS,EAAAA,EAAAA,MAAA,KAAGI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,QAAMzD,GAAG,OAAMwD,SAAC,iBACE,QADiBiC,EAClC1F,EAAYsH,aAAK,IAAA5B,OAAA,EAAjBA,EAAmB6B,KAAKzE,MAAM,EAAG,GAAGc,KAAI,SAAAa,GAAA,IAAGxE,EAAEwE,EAAFxE,GAAI4C,EAAI4B,EAAJ5B,KAAI,OAClDa,EAAAA,EAAAA,KAAA,QAAMzD,GAAG,gBAAewD,SAAA,GAAA9B,OAClBkB,EAAI,QADoB5C,EAEvB,IACN,SAIJkG,GACC5C,EAAAA,EAAAA,MAAA,OAAKtD,GAAG,eAAcwD,SAAA,EACpBF,EAAAA,EAAAA,MAAA,OACEI,UAAS,oBAAAhC,OACPkE,EAAe,OAAS,IACvBpC,SAAA,EAEHC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAc6D,QA3E5B,WACtBpB,GAAe,EACjB,EAyE6E3C,SAAC,OAG1DC,EAAAA,EAAAA,KAAA,UACEC,UAAU,wBACVG,IAAG,iCAAAnC,OAAmCkE,EAAY,sDAClD9B,MAAO8B,EAAa9B,MACpBE,MAAM,kBACNC,IAAI,IACJC,iBAAe,QAGnBT,EAAAA,EAAAA,KAAA,QAAMzD,GAAG,eAAcwD,SAAEsC,QAG3BxC,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAW6D,QAhGvB,WACnBpB,GAAe,GACfG,GAAoB,GACpBE,GACF,KA6FkB/C,EAAAA,EAAAA,KAAA,QAAMzD,GAAG,cAAawD,SAAC,6BAK/BF,EAAAA,EAAAA,MAAA,OAAKtD,GAAG,WAAUwD,SAAA,EAChBC,EAAAA,EAAAA,KAAA,MAAIzD,GAAG,aAAYwD,SAAC,eACpBC,EAAAA,EAAAA,KAAA,OAAKzD,GAAG,aAAYwD,UAClBC,EAAAA,EAAAA,KAAC+D,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GA3FN,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IAsFgB,IAAAtE,SACF,QADEkC,EACnB3F,EAAYsH,aAAK,IAAA3B,OAAA,EAAjBA,EAAmBqC,KAAKpE,KAAI,SAAAqE,GAAA,IAAGC,EAAYD,EAAZC,aAAcrF,EAAIoF,EAAJpF,KAAMsF,EAASF,EAATE,UAAS,OACzD5E,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OACEI,IAtFG,uCAsFqBoE,EACxBhD,IAAI,GACJjF,GAAG,cAELyD,EAAAA,EAAAA,KAAA,OAAKzD,GAAG,YAAWwD,SAAEZ,KACrBa,EAAAA,EAAAA,KAAA,OAAKzD,GAAG,cAAawD,SAClB0E,EAAUrF,MAAM,EAAG,IAAM,UAExB,gBAMhBY,EAAAA,EAAAA,KAAC5E,EAAS,CAACkB,YAAaA,UAKlC,C","sources":["components/RecoMovie.js","components/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { img_url, fetchData } from \"../App\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Base_Url, Api_Key } from \"../App\";\r\nimport placeholder from \"../Photos/movie_placeholder.png\";\r\nimport Slider from \"react-slick\";\r\nimport { Slide } from 'react-slideshow-image';\r\n\r\n\r\nexport default function RecoMovie({ movieDetail }) {\r\n  const { id } = useParams();\r\n  const [RecoMovies, setRecoMovies] = useState([]);\r\n  const [VideoNotAvaliable, setVideoNotAvaliable] = useState(\r\n    \"Related Videos Not Available!\"\r\n  );\r\n  const [RecoVideoNotAvaliable, setRecoNotAvaliable] = useState(\r\n    \"No Recommended Video Found!\"\r\n  );\r\n  const getRecoMovies = async () => {\r\n    let url = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=6758043f0537fea4f9c2c4e1534a395a`;\r\n    let data = await fetchData(url);\r\n    setRecoMovies(data.results);\r\n  };\r\n  const getMovieVideos = async () => {\r\n    const url = `${Base_Url}/movie/${id}/videos?${Api_Key}`;\r\n    const data = await fetchData(url);\r\n  };\r\n  useEffect(() => {\r\n    getRecoMovies();\r\n    getMovieVideos();\r\n  }, []);\r\n  const videoKeys = [\"video_key_1\"];\r\n  const videoKey = movieDetail?.videos?.results[0]?.key;\r\n  const name = movieDetail?.videos?.results[0]?.name.slice(0, 23);\r\n\r\n  const videoKey2 = movieDetail?.videos?.results[1]?.key;\r\n  const name2 = movieDetail?.videos?.results[1]?.name.slice(0, 23);\r\n  const videoKey3 = movieDetail?.videos?.results[2]?.key;\r\n  const name3 = movieDetail?.videos?.results[2]?.name.slice(0, 23);\r\n  const videoKey4 = movieDetail?.videos?.results[3]?.key;\r\n  const name4 = movieDetail?.videos?.results[3]?.name.slice(0, 23);\r\n\r\n  if (RecoMovies === \"\" || RecoMovies == null) {\r\n    console.log(\"reco movie not found\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"officialVideos\">\r\n        <h1 id=\"movie_related_title\">Movie Related Videos!</h1>\r\n        <div className=\"video-related-container\">\r\n          {videoKey === \"\" || videoKey == null ? (\r\n            <h1 id=\"video_not_found\">{VideoNotAvaliable}</h1>\r\n          ) : (\r\n            <>\r\n              <div className=\"flex_direction\">\r\n                {videoKeys.map((index) => (\r\n                  <iframe\r\n                    key={index}\r\n                    className=\"custom-video-player\"\r\n                    src={`https://www.youtube.com/embed/${videoKey}?autoplay=1&controls=1&modestbranding=1&showinfo=0`}\r\n                    title=\"Official Movie Trailer\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"encrypted-media\"\r\n                    rel=\"0\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                ))}\r\n                <h1 id=\"video_name\">{name + \"...\"}</h1>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index1) => (\r\n                    <iframe\r\n                      key={index1}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey2}?autoplay=1&controls=1`}\r\n                      title={`Movie Trailer`}\r\n                      frameBorder=\"0\"\r\n                      allow=\"encrypted-media\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ))}\r\n                  <h1 id=\"video_name\">{name2 + \"...\"}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index2) => (\r\n                    <iframe\r\n                      key={index2}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey3}?autoplay=1&controls=1`}\r\n                      title={`Movie Trailer`}\r\n                      frameBorder=\"0\"\r\n                      allow=\"encrypted-media\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ))}\r\n                  <h1 id=\"video_name\">{name3 + \"...\"}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index3) => (\r\n                    <iframe\r\n                      key={index3}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey4}?autoplay=0&controls=1`}\r\n                      title={`Movie Trailer`}\r\n                      frameBorder=\"0\"\r\n                      allow=\"autoplay; encrypted-media\"\r\n                      allowFullScreen\r\n                      width=\"560\"\r\n                      height=\"315\"\r\n                    ></iframe>\r\n                  ))}\r\n\r\n                  <h1 id=\"video_name\">{name4 + \"...\"}</h1>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div id=\"RecoMoviess\">\r\n        <h2 className=\"heading\">You May Also Like!</h2>\r\n        <div className=\"mainContent\">\r\n        {RecoMovies.map(({id,poster_path,title,vote_average,release_date})=> (\r\n              <div id=\"RecoMoviesdirection\">\r\n                {RecoMovies === \"\" ||\r\n                RecoMovies == null ||\r\n                RecoMovies === undefined ? (\r\n                  RecoVideoNotAvaliable\r\n                ) : (\r\n                  <>\r\n                    <Link to={`/moviedetail/${id}`}>\r\n                      <img\r\n                        className=\"movie_img_reco\"\r\n                        src={\r\n                          poster_path == null ||\r\n                          poster_path === undefined ||\r\n                          poster_path === \"\"\r\n                            ? placeholder\r\n                            : img_url + poster_path\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </Link>\r\n                    <div className=\"title-reco\">\r\n                      <h3 className=\"reco_title\">\r\n                        {String(title).slice(0, 19) + \"...\"}\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"reco_rating_date\">\r\n                      <div className=\"reco_rating\">\r\n                        <i\r\n                          className=\"fa-sharp fa-solid fa-star\"\r\n                          style={{ color: \"#e4ff1a\" }}\r\n                        ></i>\r\n                        {(vote_average.toFixed(1))}\r\n                      </div>\r\n                      <span className=\"reco_release_date\">\r\n                        {parseInt(release_date)}\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n            )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./CSS/MovieDetail.css\";\r\nimport RecoMovie from \"../components/RecoMovie\";\r\nimport \"./CSS/MediaMovieDetail.css\";\r\nimport \"../components/CSS/SideMedia.css\";\r\nimport \"../components/CSS/Navbar.css\";\r\nimport { img_url, fetchData, Api_Key, Base_Url } from \"../App\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nexport default function MovieDetail() {\r\n  const [movieDetail, setmovieDetail] = useState(\"\");\r\n  const [movieTrailer, setmovieTrailer] = useState(\"\");\r\n  const [TrailerNotAvaliable, setTrailerNotAvaliable] = useState(\"\");\r\n  const [isVideoPlay, setisVideoPaly] = useState(false);\r\n  const [isBackgroundBlur, setisBackgroundBlur] = useState(false);\r\n  const { id } = useParams();\r\n  const getMovieDetail = async () => {\r\n    let url = `https://api.themoviedb.org/3/movie/${id}?api_key=6758043f0537fea4f9c2c4e1534a395a&append_to_response=casts,crew,videos,images,releases`;\r\n    let data = await fetchData(url);\r\n    setmovieDetail(data);\r\n  };\r\n  //Getting Movie tralier\r\n  const getMovieTrailer = async () => {\r\n    const url = `${Base_Url}/movie/${id}/videos?${Api_Key}`;\r\n    const data = await fetchData(url);\r\n\r\n    const officialTrailer = data.results.find(\r\n      (video) => video.type === \"Trailer\"\r\n    );\r\n    if (officialTrailer) {\r\n      setmovieTrailer(officialTrailer.key);\r\n    } else {\r\n      setTrailerNotAvaliable(\"Oops! Movie Tralier is not Avaliable!\");\r\n    }\r\n  };\r\n  const watchTrailer = () => {\r\n    setisVideoPaly(true);\r\n    setisBackgroundBlur(true);\r\n    getMovieTrailer();\r\n  };\r\n  const handleExitClick = () => {\r\n    setisVideoPaly(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieDetail();\r\n  }, []);\r\n\r\n  \r\n  var settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  const img_base_url = \"https://image.tmdb.org/t/p/w500\";\r\n  const cast_profile_url = \"https://image.tmdb.org/t/p/original/\";\r\n  const rating = Number(movieDetail.vote_average);\r\n  return (\r\n    <>\r\n      <artical className=\"movie-detail\">\r\n        <div\r\n          className=\"background_image\"\r\n          style={{\r\n            backgroundImage: `url(${img_base_url + movieDetail.backdrop_path})`,\r\n          }}\r\n        >\r\n          <div className=\"brightness\">\r\n            <figure id=\"movie_poster_detail\">\r\n              <img\r\n                src={img_url + movieDetail.poster_path}\r\n                className=\"movie_image_detail\"\r\n                alt={movieDetail.title}\r\n              />\r\n              <div className=\"movie_detail\">\r\n                <h1 className=\"heading\">{movieDetail.title}</h1>\r\n                <div className=\"spancontent\">\r\n                  <span className=\"movierating\">\r\n                    <i\r\n                      className=\"fa-sharp fa-solid fa-star\"\r\n                      style={{ color: \"#e4ff1a\", display: \"inline\" }}\r\n                    ></i>\r\n                    {rating.toFixed(1)}\r\n                  </span>\r\n                  <span className=\"movie_length\">{movieDetail.runtime}m</span>\r\n                  <span className=\"movie_releasedate_detail\">\r\n                    {parseInt(movieDetail.release_date)}\r\n                  </span>\r\n                </div>\r\n                {movieDetail.genres?.map(({ name }) => (\r\n                  <span id=\"genre_filter\">{name + \" \"}</span>\r\n                ))}\r\n                <h1 id=\"overview_title\">Overview</h1>\r\n                <p className=\"overview_detail\">\r\n                  {String(movieDetail.overview).slice(0, 400)}\r\n                </p>\r\n                <p className=\"Director\">\r\n                  <span id=\"word\">Directed by:</span>\r\n                  {movieDetail.casts?.crew.slice(0, 2).map(({ id, name }) => (\r\n                    <span id=\"Director_span\" key={id}>\r\n                      {`${name} , `}\r\n                    </span>\r\n                  ))}\r\n                  ...\r\n                </p>\r\n\r\n                {isVideoPlay ? (\r\n                  <div id=\"movieTralier\">\r\n                    <div\r\n                      className={`mainVideoContent ${\r\n                        movieTrailer ? \"open\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <button className=\"exit-button\" onClick={handleExitClick}>\r\n                        X\r\n                      </button>\r\n                      <iframe\r\n                        className=\"custom-tralier-player\"\r\n                        src={`https://www.youtube.com/embed/${movieTrailer}?autoplay=1&controls=1&modestbranding=1&showinfo=0`}\r\n                        title={movieTrailer.title}\r\n                        allow=\"encrypted-media\"\r\n                        rel=\"0\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                    </div>\r\n                    <span id=\"notAvaliable\">{TrailerNotAvaliable}</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"videoBtn\">\r\n                    <div className=\"play-btn\" onClick={watchTrailer}></div>\r\n                    <span id=\"watchtralir\">Watch Traliar!</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </figure>\r\n            <div id=\"top_cast\">\r\n              <h1 id=\"cast_title\">Top Cast!</h1>\r\n              <div id=\"castdetail\">\r\n                <Slider {...settings}>\r\n                {movieDetail.casts?.cast.map(({ profile_path, name, character }) => (\r\n                    <div className=\"movie_direction\">\r\n                      <img\r\n                        src={cast_profile_url + profile_path}\r\n                        alt=\"\"\r\n                        id=\"cast_img\"\r\n                      />\r\n                      <div id=\"cast_name\">{name}</div>\r\n                      <div id=\"acting_name\">\r\n                        {character.slice(0, 10) + \"...\"}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  </Slider>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <RecoMovie movieDetail={movieDetail} />\r\n        </div>\r\n      </artical>\r\n    </>\r\n  );\r\n}\r\n"],"names":["RecoMovie","_ref","_movieDetail$videos","_movieDetail$videos$r","_movieDetail$videos2","_movieDetail$videos2$","_movieDetail$videos3","_movieDetail$videos3$","_movieDetail$videos4","_movieDetail$videos4$","_movieDetail$videos5","_movieDetail$videos5$","_movieDetail$videos6","_movieDetail$videos6$","_movieDetail$videos7","_movieDetail$videos7$","_movieDetail$videos8","_movieDetail$videos8$","movieDetail","id","useParams","_useState","useState","_useState2","_slicedToArray","RecoMovies","setRecoMovies","_useState3","_useState4","VideoNotAvaliable","_useState5","_useState6","RecoVideoNotAvaliable","getRecoMovies","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","data","wrap","_context","prev","next","concat","fetchData","sent","results","stop","apply","arguments","getMovieVideos","_ref3","_callee2","_context2","Base_Url","Api_Key","useEffect","videoKeys","videoKey","videos","key","name","slice","videoKey2","name2","videoKey3","name3","videoKey4","name4","console","log","_jsxs","_Fragment","children","_jsx","className","map","index","src","title","frameBorder","allow","rel","allowFullScreen","index1","index2","index3","width","height","_ref4","poster_path","vote_average","release_date","undefined","Link","to","placeholder","img_url","alt","String","style","color","toFixed","parseInt","MovieDetail","_movieDetail$genres","_movieDetail$casts","_movieDetail$casts2","setmovieDetail","movieTrailer","setmovieTrailer","TrailerNotAvaliable","setTrailerNotAvaliable","_useState7","_useState8","isVideoPlay","setisVideoPaly","_useState9","_useState10","setisBackgroundBlur","getMovieDetail","getMovieTrailer","officialTrailer","find","video","type","rating","Number","backgroundImage","backdrop_path","display","runtime","genres","overview","casts","crew","onClick","Slider","_objectSpread","dots","infinite","speed","slidesToShow","slidesToScroll","cast","_ref5","profile_path","character"],"sourceRoot":""}