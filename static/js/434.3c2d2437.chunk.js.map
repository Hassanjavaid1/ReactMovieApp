{"version":3,"file":"static/js/434.3c2d2437.chunk.js","mappings":"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","sources":["Components/RecoMovie.js","Components/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { img_url } from \"../App\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Base_Url, Api_Key } from \"../App\";\r\nimport placeholder from \"../Photos/movie_placeholder.png\";\r\n\r\nexport default function RecoMovie({ movieDetail }) {\r\n  const { id } = useParams();\r\n  const [RecoMovies, setRecoMovies] = useState([]);\r\n  const [VideoNotAvaliable, setVideoNotAvaliable] = useState(\r\n    \"Related Videos Not Available!\"\r\n  );\r\n  const [RecoVideoNotAvaliable, setRecoNotAvaliable] = useState(\r\n    \"No Recommended Video Found!\"\r\n  );\r\n  // const getRecoMovies = async () => {\r\n  //   let url = `https://api.themoviedb.org/3/movie/${id}/recommendations?api_key=6758043f0537fea4f9c2c4e1534a395a`;\r\n  //   let data = await fetchData(url);\r\n  //   setRecoMovies(data.results);\r\n  // };\r\n  // const getMovieVideos = async () => {\r\n  //   const url = `${Base_Url}/movie/${id}/videos?${Api_Key}`;\r\n  //   const data = await fetchData(url);\r\n  // };\r\n  // useEffect(() => {\r\n  //   getRecoMovies();\r\n  //   getMovieVideos();\r\n  // }, []);\r\n\r\n  const videoKeys = [\"video_key_1\"];\r\n  const videoKey = movieDetail?.videos?.results[0]?.key;\r\n  const name = movieDetail?.videos?.results[0]?.name.slice(0, 30);\r\n  const videoKey2 = movieDetail?.videos?.results[1]?.key;\r\n  const name2 = movieDetail?.videos?.results[1]?.name.slice(0, 30);\r\n  const videoKey3 = movieDetail?.videos?.results[2]?.key;\r\n  const name3 = movieDetail?.videos?.results[2]?.name.slice(0, 30);\r\n  const videoKey4 = movieDetail?.videos?.results[3]?.key;\r\n  const name4 = movieDetail?.videos?.results[3]?.name.slice(0, 30);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"officialVideos\">\r\n        <h1 id=\"movie_related_title\">Related Videos!</h1>\r\n        <div className=\"video-related-container\">\r\n          {videoKey === \"\" || videoKey == null ? (\r\n            <h1 id=\"video_not_found\">{VideoNotAvaliable}</h1>\r\n          ) : (\r\n            <>\r\n              <div className=\"flex_direction\">\r\n                {videoKeys.map((index) => (\r\n                  <iframe\r\n                    key={index}\r\n                    className=\"custom-video-player\"\r\n                    src={`https://www.youtube.com/embed/${videoKey}?autoplay=1&controls=1&modestbranding=1&showinfo=0`}\r\n                    title=\"Official Movie Trailer\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"encrypted-media\"\r\n                    rel=\"0\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                ))}\r\n                <h1 id=\"video_name\">{name}</h1>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index1) => (\r\n                    <iframe\r\n                      key={index1}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey2}?autoplay=1&controls=1`}\r\n                      title={name}\r\n                      allow=\"encrypted-media\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ))}\r\n                  <h1 id=\"video_name\">{name2}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index2) => (\r\n                    <iframe\r\n                      key={index2}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey3}?autoplay=1&controls=1`}\r\n                      title={name2}\r\n                      allow=\"encrypted-media\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ))}\r\n                  <h1 id=\"video_name\">{name3}</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"video-related-container\">\r\n                <div className=\"flex_direction\">\r\n                  {videoKeys.map((index3) => (\r\n                    <iframe\r\n                      key={index3}\r\n                      className=\"custom-video-player\"\r\n                      src={`https://www.youtube.com/embed/${videoKey4}?autoplay=0&controls=1`}\r\n                      title={name3}\r\n                      allow=\"autoplay; encrypted-media\"\r\n                      allowFullScreen\r\n                      width=\"560\"\r\n                      height=\"315\"\r\n                    ></iframe>\r\n                  ))}\r\n\r\n                  <h1 id=\"video_name\">{name4}</h1>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* <div id=\"RecoMoviess\">\r\n        <h2 className=\"heading\">You May Also Like!</h2>\r\n        {RecoMovies === null ||\r\n        RecoMovies === undefined ||\r\n        RecoMovies.length === 0 ? (\r\n          RecoVideoNotAvaliable\r\n        ) : (\r\n          <div className=\"mainContent\">\r\n            {RecoMovies.map(\r\n              ({ title, poster_path, vote_average, release_date, id }) => (\r\n                <div id=\"RecoMoviesdirection\">\r\n                  <>\r\n                    <Link to={`/moviedetail/${id}`}>\r\n                      <img\r\n                        className=\"movie_img_reco\"\r\n                        src={\r\n                          poster_path == null ||\r\n                          poster_path === undefined ||\r\n                          poster_path === \"\"\r\n                            ? placeholder\r\n                            : img_url + poster_path\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                    </Link>\r\n                    <div className=\"title-reco\">\r\n                      <h3 className=\"reco_title\">\r\n                        {String(title).slice(0, 19) + \"...\"}\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"reco_rating_date\">\r\n                      <div className=\"reco_rating\">\r\n                        <i\r\n                          className=\"fa-sharp fa-solid fa-star\"\r\n                          style={{ color: \"#e4ff1a\" }}\r\n                        ></i>\r\n                        {vote_average.toFixed(1)}\r\n                      </div>\r\n                      <span className=\"reco_release_date\">\r\n                        {parseInt(release_date)}\r\n                      </span>\r\n                    </div>\r\n                  </>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport \"./CSS/MovieDetail.css\";\r\nimport \"./CSS/MoviesItems.css\";\r\nimport RecoMovie from './RecoMovie'\r\n\r\nimport \"./CSS/SideMedia.css\";\r\nimport \"./CSS/Navbar.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport { HomeContext } from \"../Api/HomeApi\";\r\nimport placeholder from \"../Photos/movie_placeholder.png\";\r\nexport default function MovieDetail() {\r\n  const { img_url, Api_Key, Base_Url,backdropURL } = useContext(HomeContext);\r\n\r\n  const [movieDetail, setmovieDetail] = useState(\"\");\r\n  const [movieTrailer, setmovieTrailer] = useState(\"\");\r\n  const [TrailerNotAvaliable, setTrailerNotAvaliable] = useState(\"\");\r\n  const [isVideoPlay, setisVideoPaly] = useState(false);\r\n  const [isBackgroundBlur, setisBackgroundBlur] = useState(false);\r\n\r\n  const { id } = useParams();\r\n\r\n  const getMovieDetail = async () => {\r\n    try {\r\n      let res = await fetch(\r\n        `${Base_Url}/movie/${id}?${Api_Key}&append_to_response=casts,crew,videos,images,releases`\r\n      );\r\n      let data = await res.json();\r\n      setmovieDetail(data);\r\n    } catch (err) {\r\n      return console.error(\"Error Occured:\", err);\r\n    }\r\n  };\r\n  //Getting Movie trailer\r\n  const getMovieTrailer = async () => {\r\n    try {\r\n      const url = await fetch(`${Base_Url}/movie/${id}/videos?${Api_Key}`);\r\n      const data = await url.json();\r\n      const officialTrailer = data.results.find(\r\n        (video) => video.type == \"Trailer\"\r\n      );\r\n      if (officialTrailer) {\r\n        setmovieTrailer(officialTrailer.key);\r\n      } else {\r\n        setTrailerNotAvaliable(\"Opps! Movie Trailer is not Avaliable!\");\r\n      }\r\n    } catch (err) {\r\n      setTrailerNotAvaliable(\"Something went wrong Try again...\");\r\n    }\r\n  };\r\n  const watchTrailer = () => {\r\n    setisVideoPaly(true);\r\n    setisBackgroundBlur(true);\r\n    getMovieTrailer();\r\n  };\r\n\r\n  const handleExitClick = () => {\r\n    setisVideoPaly(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieDetail();\r\n  }, []);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 800,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 5,\r\n    arrows: true,\r\n  };\r\n\r\n\r\n  const rating = Number(movieDetail.vote_average);\r\n  return (\r\n    <>\r\n      <artical className=\"movie-detail\">\r\n        <div\r\n          className=\"background_image\"\r\n          style={{\r\n            backgroundImage: `url(${img_url + movieDetail.backdrop_path})`,\r\n          }}\r\n        >\r\n          <div className=\"brightness\">\r\n            <figure id=\"movie_poster_detail\">\r\n              <img\r\n                src={img_url + movieDetail.poster_path}\r\n                className=\"movie_image_detail\"\r\n                alt={movieDetail.title}\r\n              />\r\n              <div className=\"movie_detail\">\r\n                <h1 className=\"heading\">{movieDetail.title}</h1>\r\n                <div className=\"spancontent\">\r\n                  <span className=\"movierating\">\r\n                    <i\r\n                      className=\"fa-sharp fa-solid fa-star\"\r\n                      style={{ color: \"#e4ff1a\", display: \"inline\" }}\r\n                    ></i>\r\n                    {rating.toFixed(1)}\r\n                  </span>\r\n                  <span className=\"movie_length\">{movieDetail.runtime}m</span>\r\n                  <span className=\"movie_releasedate_detail\">\r\n                    {parseInt(movieDetail.release_date)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"marginTop\">\r\n                  {movieDetail.genres?.map(({ name }) => (\r\n                    <span className=\"genre_filter\">{name + \" \"}</span>\r\n                  ))}\r\n                </div>\r\n                <h1 id=\"overview_title\">Overview</h1>\r\n                <p className=\"overview_detail\">\r\n                  {String(movieDetail.overview).slice(0, 400)}\r\n                </p>\r\n                <p className=\"Director\">\r\n                  <span id=\"word\">Directed by:</span>\r\n                  {movieDetail.casts?.crew.slice(0, 10).map(({ id, name }) => (\r\n                    <span id=\"Director_span\" key={id}>\r\n                      {`${name}, `} etc.\r\n                    </span>\r\n                  ))}\r\n                </p>\r\n\r\n                {isVideoPlay ? (\r\n                  <div id=\"movieTralier\">\r\n                    <div\r\n                      className={`mainVideoContent ${\r\n                        movieTrailer ? \"open\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <button className=\"exit-button\" onClick={handleExitClick}>\r\n                        X\r\n                      </button>\r\n                      <iframe\r\n                        className=\"custom-tralier-player\"\r\n                        src={`https://www.youtube.com/embed/${movieTrailer}?autoplay=1&controls=1&modestbranding=1&showinfo=0`}\r\n                        title={movieTrailer.title}\r\n                        allow=\"encrypted-media\"\r\n                        rel=\"0\"\r\n                        allowFullScreen\r\n                      ></iframe>\r\n                    </div>\r\n                    <span id=\"notAvaliable\">{TrailerNotAvaliable}</span>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"videoBtn\">\r\n                    <div className=\"play-btn\" onClick={watchTrailer}></div>\r\n                    <span id=\"watchtralir\">Watch Traliar!</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </figure>\r\n            <div id=\"top_cast\">\r\n              <h1 id=\"cast_title\">Top Cast!</h1>\r\n              <div id=\"castdetail\">\r\n                <Slider {...settings}>\r\n                  {movieDetail.casts?.cast.map(\r\n                    ({ profile_path, name, character }) => (\r\n                      <div className=\"movie_direction\">\r\n                        <img\r\n                          src={\r\n                            profile_path\r\n                              ? backdropURL + profile_path\r\n                              : placeholder\r\n                          }\r\n                          alt=\"\"\r\n                          className=\"cast_img\"\r\n                        />\r\n                        <div className=\"marginTop\">\r\n                          <div className=\"cast_name\">\r\n                            {String(name).slice(0, 18)}\r\n                            {String(name).length > 18 ? \"...\" : \"\"}\r\n                          </div>\r\n                          <div className=\"acting_name\">\r\n                            {character.slice(0, 18)}\r\n                            {String(character).length > 18 ? \"...\" : \"\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </Slider>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <RecoMovie movieDetail={movieDetail} key={id} />\r\n        </div>\r\n      </artical>\r\n    </>\r\n  );\r\n}\r\n"],"names":["RecoMovie","_ref","_movieDetail$videos","_movieDetail$videos$r","_movieDetail$videos2","_movieDetail$videos2$","_movieDetail$videos3","_movieDetail$videos3$","_movieDetail$videos4","_movieDetail$videos4$","_movieDetail$videos5","_movieDetail$videos5$","_movieDetail$videos6","_movieDetail$videos6$","_movieDetail$videos7","_movieDetail$videos7$","_movieDetail$videos8","_movieDetail$videos8$","movieDetail","_useState","useParams","id","useState","_useState2","_slicedToArray","_useState3","_useState4","VideoNotAvaliable","_useState5","_useState6","videoKeys","videoKey","videos","results","key","name","slice","videoKey2","name2","videoKey3","name3","videoKey4","name4","_jsx","_Fragment","children","_jsxs","className","map","index","src","concat","title","frameBorder","allow","rel","allowFullScreen","index1","index2","index3","width","height","MovieDetail","_movieDetail$genres","_movieDetail$casts","_movieDetail$casts2","_useContext","useContext","HomeContext","img_url","Api_Key","Base_Url","backdropURL","setmovieDetail","movieTrailer","setmovieTrailer","TrailerNotAvaliable","setTrailerNotAvaliable","_useState7","_useState8","isVideoPlay","setisVideoPaly","_useState9","_useState10","setisBackgroundBlur","getMovieDetail","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","json","t0","abrupt","console","error","stop","apply","arguments","getMovieTrailer","_ref2","_callee2","url","officialTrailer","_context2","find","video","type","useEffect","rating","Number","vote_average","style","backgroundImage","backdrop_path","poster_path","alt","color","display","toFixed","runtime","parseInt","release_date","genres","_ref3","String","overview","casts","crew","_ref4","onClick","Slider","_objectSpread","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","cast","_ref5","profile_path","character","placeholder","length"],"sourceRoot":""}